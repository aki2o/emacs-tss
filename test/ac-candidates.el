(require 'tss)
(require 'typescript)
(require 'el-expectations)
(require 'tenv)

(expectations
  (desc "ac-candidates call for member")
  (expect t
    (tss--log-enable-logging)
    (tss--log-set-level 'trace)
    (tss--log-clear-log)
    (stub tss-run-flymake => nil)
    (stub tss--sync-server => t)
    (stub process-send-string => nil)
    (add-to-list 'auto-mode-alist '("\\.ts\\'" . typescript-mode))
    (let ((tfile (tenv-get-tmp-file "tss" "actest.ts" nil t)))
      (with-current-buffer (find-file-noselect tfile)
        (erase-buffer)
        (insert "var s1;\nvar s2;\n")
        (save-buffer)
        (tss--start-process)
        (goto-char (point-min))
        (search-forward "s" nil t)
        (tss--get-ac-member-candidates))
      (with-current-buffer (get-buffer " *log4e-tss*")
        (goto-char (point-max))
        (or (when (search-backward "cmdstr" nil t)
              (string= (buffer-substring-no-properties (point) (point-at-eol))
                       (concat "cmdstr[completions true 1 6 " tfile "] waitsec[2]")))
            (buffer-substring-no-properties (point-min) (point-max))))))
  (desc "ac-candidates call for non-member")
  (expect t
    (stub tss--sync-server => t)
    (stub process-send-string => nil)
    (tss--log-clear-log)
    (add-to-list 'auto-mode-alist '("\\.ts\\'" . typescript-mode))
    (let ((tfile (tenv-get-tmp-file "tss" "actest.ts" nil t)))
      (with-current-buffer (find-file-noselect tfile)
        (goto-char (point-min))
        (search-forward "2" nil t)
        (tss--get-ac-non-member-candidates))
      (with-current-buffer (get-buffer " *log4e-tss*")
        (goto-char (point-max))
        (or (when (search-backward "cmdstr" nil t)
              (string= (buffer-substring-no-properties (point) (point-at-eol))
                       (concat "cmdstr[completions-brief false 2 7 " tfile "] waitsec[2]")))
            (buffer-substring-no-properties (point-min) (point-max))))))
  (desc "ac-candidates get")
  (expect "version is PROPERTY.\n\nType: Number\n\nhogege\n"
    (stub tss--sync-server => t)
    (stub tss--get-server-response => '((entries . [((docComment . "hogege") (fullSymbolName . "Harness.ScriptInfo.version") (kindModifiers . "public") (kind . "property") (type . "number") (name . "version")) ((docComment . "") (fullSymbolName . "Harness.ScriptInfo.editRanges") (kindModifiers . "public") (kind . "property") (type . "{ length: number; editRange: any; }[]") (name . "editRanges"))]) (isMemberCompletion . t) (maybeInaccurate . :json-false)))
    (add-to-list 'auto-mode-alist '("\\.ts\\'" . typescript-mode))
    (let* ((tfile (tenv-get-tmp-file "tss" "actest.ts" nil t))
           (ret (with-current-buffer (find-file-noselect tfile)
                  (goto-char (point-min))
                  (tss--get-ac-member-candidates))))
      (when (= (length ret) 2)
        (popup-item-documentation (nth 0 ret)))))
  )

